worker_processes  1;

events { worker_connections 1024; }

http {
    sendfile on;
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    client_max_body_size 2m;

    # Basic logging
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;

    map $http_x_device_token $allow_device {
        default 0;
        "${DEVICE_TOKEN}" 1;
    }

    upstream backend_app {
        server ${UPSTREAM_HOST}:${UPSTREAM_PORT};
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # Optional allowlist by token
        if ($allow_device = 0) {
            return 403;
        }

        location / {
            proxy_pass http://backend_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }

        location /health {
            return 200 'ok';
            add_header Content-Type text/plain;
        }
    }
}
